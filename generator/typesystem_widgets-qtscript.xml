<?xml version="1.0"?>
<typesystem package="com.trolltech.qt.widgets">

  <rejection class="QColormap"/>
  <rejection class="QTreeWidgetItemIterator"/>

  <!-- ### the generator uses the java name -->
  <rejection class="QInputContextFactoryInterface"/>
  <rejection class="QStyleFactoryInterface"/>

  <!-- ### these don't compile -->
  <rejection class="QAbstractProxyModel"/>
  <rejection class="QSortFilterProxyModel"/>
  <rejection class="QDirModel"/>
  <rejection class="QFileSystemModel"/>
  <rejection class="QProxyModel"/>

  <interface-type name="QGraphicsItem">
    <modify-function signature="supportsExtension(QGraphicsItem::Extension)const" remove="all"/>
    <modify-function signature="setExtension(QGraphicsItem::Extension,QVariant)" remove="all"/>
  </interface-type>

  <object-type name="QGraphicsItemAnimation">
    <extra-includes>
        <include file-name="QPair" location="global"/>
    </extra-includes>
  </object-type>

  <object-type name="QGraphicsScene">
    <modify-function signature="addWidget(QWidget*,QFlags&lt;Qt::WindowType&gt;)">
        <modify-argument index="1">
          <conversion-rule class="native">
          QScriptValue %out%_orig = %in%;
          QWidget* %out% = qscriptvalue_cast&lt;QWidget*&gt;(%out%_orig);
          if (%out% != 0)
              context->engine()->newQObject(%out%_orig, %out%, QScriptEngine::QtOwnership);
          </conversion-rule>            
        </modify-argument>
    </modify-function>
  </object-type>

  <object-type name="QFontDialog">
    <inject-code class="native" position="beginning">
    Q_DECLARE_METATYPE(QScriptValue)
    </inject-code>
    <modify-function signature="getFont(bool*,QWidget*)">
        <modify-argument index="1">
          <remove-argument/>
          <conversion-rule class="native">
          <insert-template name="core.prepare_removed_bool*_argument"/>
          </conversion-rule>            
        </modify-argument>
        <modify-argument index="return">
          <conversion-rule class="native">
          <insert-template name="core.convert_to_null_or_wrap"/>
          </conversion-rule>
        </modify-argument>
    </modify-function>

    <modify-function signature="getFont(bool*,QFont,QWidget*)">
        <modify-argument index="1">
          <remove-argument/>
          <conversion-rule class="native">
          <insert-template name="core.prepare_removed_bool*_argument"/>
          </conversion-rule>            
        </modify-argument>
        <modify-argument index="return">
          <conversion-rule class="native">
          <insert-template name="core.convert_to_null_or_wrap"/>
          </conversion-rule>
        </modify-argument>
    </modify-function>

    <modify-function signature="getFont(bool*,QFont,QWidget*,QString)">
        <modify-argument index="1">
          <remove-argument/>
          <conversion-rule class="native">
          <insert-template name="core.prepare_removed_bool*_argument"/>
          </conversion-rule>            
        </modify-argument>
        <modify-argument index="return">
          <conversion-rule class="native">
          <insert-template name="core.convert_to_null_or_wrap"/>
          </conversion-rule>
        </modify-argument>
    </modify-function>
  </object-type>

  <object-type name="QInputDialog">
    <inject-code class="native" position="beginning">
    Q_DECLARE_METATYPE(QScriptValue)
    </inject-code>
    <modify-function signature="getDouble(QWidget *, const QString &amp;, const QString &amp;, double, double, double, int, bool *, QFlags&lt;Qt::WindowType&gt;)">
        <modify-argument index="8">
          <remove-argument/>
          <conversion-rule class="native">
          <insert-template name="core.prepare_removed_bool*_argument"/>
          </conversion-rule>            
        </modify-argument>
        <modify-argument index="return">
          <conversion-rule class="native">
          <insert-template name="core.convert_to_null_or_primitive"/>
          </conversion-rule>
        </modify-argument>
    </modify-function>
    
    <modify-function signature="getInteger(QWidget *, const QString &amp;, const QString &amp;, int, int, int, int, bool *, QFlags&lt;Qt::WindowType&gt;)">
        <modify-argument index="8">
          <remove-argument/>
          <conversion-rule class="native">
          <insert-template name="core.prepare_removed_bool*_argument"/>
          </conversion-rule>            
        </modify-argument>
        <modify-argument index="return">
          <conversion-rule class="native">
          <insert-template name="core.convert_to_null_or_primitive"/>
          </conversion-rule>
        </modify-argument>
    </modify-function>
      
    <modify-function signature="getItem(QWidget *, const QString &amp;, const QString &amp;, const QStringList&lt;QString&gt; &amp;, int, bool, bool *, QFlags&lt;Qt::WindowType&gt;)">
        <modify-argument index="7">
          <remove-argument/>
          <conversion-rule class="native">
          <insert-template name="core.prepare_removed_bool*_argument"/>
          </conversion-rule>            
        </modify-argument>
        <modify-argument index="return">
          <conversion-rule class="native">
          <insert-template name="core.convert_to_null_or_primitive"/>
          </conversion-rule>
        </modify-argument>
    </modify-function>
   
    <modify-function signature="getText(QWidget *, const QString &amp;, const QString &amp;, QLineEdit::EchoMode, const QString &amp;, bool *, QFlags&lt;Qt::WindowType&gt;)">
        <modify-argument index="6">
          <remove-argument/>
          <conversion-rule class="native">
          <insert-template name="core.prepare_removed_bool*_argument"/>
          </conversion-rule>            
        </modify-argument>
        <modify-argument index="return">
          <conversion-rule class="native">
          <insert-template name="core.convert_to_null_or_primitive"/>
          </conversion-rule>
        </modify-argument>
    </modify-function>
  </object-type>

  <object-type name="QListWidgetItem">
    <modify-function signature="read(QDataStream &amp;)" remove="all"/>
    <modify-function signature="write(QDataStream &amp;)const" remove="all"/>
    <modify-function signature="QListWidgetItem(QListWidgetItem)" remove="all"/>
    <modify-function signature="operator=(QListWidgetItem)" remove="all"/>
    <modify-function signature="operator&lt;(QListWidgetItem)const" remove="all"/>
  </object-type>

  <object-type name="QTableWidgetItem">
    <modify-function signature="read(QDataStream &amp;)" remove="all"/>
    <modify-function signature="write(QDataStream &amp;)const" remove="all"/>
    <modify-function signature="QTableWidgetItem(QTableWidgetItem)" remove="all"/>
    <modify-function signature="operator=(QTableWidgetItem)" remove="all"/>
    <modify-function signature="operator&lt;(QTableWidgetItem)const" remove="all"/>
  </object-type>

  <object-type name="QTreeWidgetItem">
    <modify-function signature="read(QDataStream &amp;)" remove="all"/>
    <modify-function signature="write(QDataStream &amp;)const" remove="all"/>
    <modify-function signature="QTreeWidgetItem(QTreeWidgetItem)" remove="all"/>
    <modify-function signature="operator=(QTreeWidgetItem)" remove="all"/>
    <modify-function signature="operator&lt;(QTreeWidgetItem)const" remove="all"/>
  </object-type>

  <object-type name="QStandardItem">
    <modify-function signature="read(QDataStream &amp;)" remove="all"/>
    <modify-function signature="write(QDataStream &amp;)const" remove="all"/>
    <modify-function signature="operator=(QStandardItem)" remove="all"/>
    <modify-function signature="operator&lt;(QStandardItem)const" remove="all"/>
  </object-type>

  <object-type name="QStyle">
    <modify-function signature="itemTextRect(QFontMetrics,QRect,int,bool,QString)const" remove="all"/>
  </object-type>

  <object-type name="QWidget">
    <modify-function signature="fontInfo()const" remove="all"/>
    <modify-function signature="fontMetrics()const" remove="all"/>
    <modify-function signature="sizeHint()const" rename="getSizeHint"/>
    <modify-function signature="minimumSizeHint()const" rename="getMinimumSizeHint"/>
    <modify-function signature="setVisible(bool)" remove="all"/>
    <modify-function signature="grabGesture(Qt::GestureType type,Qt::GestureFlags)">
        <modify-argument index="2"> <remove-default-expression/> </modify-argument>
    </modify-function>
  </object-type>

  <!-- FIXME -->
  <object-type name="QCalendarWidget">
      <modify-function signature="sizeHint()const" rename="getSizeHint"/>
      <modify-function signature="minimumSizeHint()const" rename="getMinimumSizeHint"/>
  </object-type>

  <object-type name="QAbstractItemView">
    <!-- ### because the CursorAction enum is protected -->
    <modify-function signature="moveCursor(QAbstractItemView::CursorAction,QFlags&lt;Qt::KeyboardModifier&gt;)" remove="all"/>
    <inject-code class="shell-declaration">
    QModelIndex moveCursor(QAbstractItemView::CursorAction, Qt::KeyboardModifiers)
    { return QModelIndex(); }
    </inject-code>
  </object-type>

  <object-type name="QAbstractSlider">
    <modify-function signature="sliderChange(QAbstractSlider::SliderChange)" remove="all"/>
  </object-type>

  <object-type name="QListWidget">
    <modify-function signature="mimeData(const QList&lt;QListWidgetItem*&gt;)const" remove="all"/>
  </object-type>

  <object-type name="QTableWidget">
    <modify-function signature="mimeData(const QList&lt;QTableWidgetItem*&gt;)const" remove="all"/>
  </object-type>

  <object-type name="QTreeWidget">
    <modify-function signature="mimeData(const QList&lt;QTreeWidgetItem*&gt;)const" remove="all"/>
  </object-type>

  <object-type name="QApplication">
    <modify-function signature="QApplication(int&amp;,char**,QApplication::Type,int)" remove="all"/>
    <modify-function signature="QApplication(int&amp;,char**,bool,int)" remove="all"/>
    <modify-function signature="QApplication(int&amp;,char**,int)" remove="all"/>
    <modify-function signature="commitData(QSessionManager&amp;)" remove="all"/>
    <modify-function signature="saveState(QSessionManager&amp;)" remove="all"/>
    <modify-function signature="fontMetrics()" remove="all"/>
    <modify-function signature="setFont(QFont,const char*)">
      <modify-argument index="2">
        <replace-type modified-type="QString"/>
        <conversion-rule class="native">
          <insert-template name="core.convert_string_arg_to_char*"/>
        </conversion-rule>            
      </modify-argument>
    </modify-function>
    <modify-function signature="setPalette(QPalette,const char*)">
      <modify-argument index="2">
        <replace-type modified-type="QString"/>
        <conversion-rule class="native">
          <insert-template name="core.convert_string_arg_to_char*"/>
        </conversion-rule>            
      </modify-argument>
    </modify-function>
  </object-type>

  <suppress-warning text="WARNING() :: Unknown attribute for 'modify-function': 'allow-as-slot'" />

</typesystem>
